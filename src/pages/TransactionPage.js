// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Icon = require("../common/Icon.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Address = require("../components/Address.js");
var TezStats = require("../common/TezStats.js");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");
var MainLayout = require("../layouts/MainLayout.js");
var Belt_Option = require("bs-platform/lib/js/belt_Option.js");

function TransactionPage$TransactionIcon(Props) {
  var isPaid = Props.isPaid;
  var colorClass = isPaid ? "bg-green-light text-green" : "bg-red-10-tr text-red";
  var icon = isPaid ? React.createElement(Icon.ArrowUp.make, {}) : React.createElement(Icon.ArrowDown.make, {});
  return React.createElement("div", {
              className: "px-1 py-1 rounded-md " + colorClass
            }, icon);
}

var TransactionIcon = {
  make: TransactionPage$TransactionIcon
};

var intl = new (Intl.NumberFormat)("en-US", {
      minimumFractionDigits: 2
    });

function styledVolume(isPaid, volume) {
  var formattedVolume = intl.format(volume);
  var className = isPaid ? "text-green" : "text-red";
  var minus = isPaid ? null : "- ";
  return React.createElement("div", {
              className: className
            }, minus, formattedVolume);
}

function TransactionPage$TransactionHistory(Props) {
  var address = Props.address;
  var transactions = Props.transactions;
  var content = Belt_Array.map(transactions, (function (t) {
          var receiver = t.receiver;
          var isPaid = receiver !== undefined ? receiver === address : false;
          var className = "px-3 py-3 border-t border-grey-10";
          return React.createElement("tr", {
                      key: String(t.row_id)
                    }, React.createElement("td", {
                          className: className
                        }, React.createElement(TransactionPage$TransactionIcon, {
                              isPaid: isPaid
                            })), React.createElement("td", {
                          className: className
                        }, React.createElement(Address.make, {
                              address: t.sender,
                              format: /* Short */1
                            })), React.createElement("td", {
                          className: className
                        }, Belt_Option.mapWithDefault(t.receiver, null, (function (address) {
                                return React.createElement(Address.make, {
                                            address: address,
                                            format: /* Short */1
                                          });
                              }))), React.createElement("td", {
                          className: "px-3 py-3 border-t border-grey-10 text-right"
                        }, styledVolume(isPaid, t.volume)));
        }));
  var className = "text-left uppercase px-3 pb-2";
  return React.createElement("div", {
              className: "h-full rounded-md text-blue-90 px-6 py-6 bg-white"
            }, React.createElement("div", {
                  className: "text-16 font-bold mb-3"
                }, "Transaction History"), React.createElement("table", undefined, React.createElement("thead", {
                      className: ""
                    }, React.createElement("tr", {
                          className: "text-10"
                        }, React.createElement("th", {
                              className: className
                            }, React.createElement(Icon.UpDownArrow.make, {})), React.createElement("th", {
                              className: className
                            }, "SENDER"), React.createElement("th", {
                              className: className
                            }, "RECEIVER"), React.createElement("th", {
                              className: "text-left uppercase px-3 pb-2 text-right"
                            }, "VOLUME (" + ("êœ©" + ")")))), React.createElement("tbody", undefined, content)));
}

var TransactionHistory = {
  make: TransactionPage$TransactionHistory
};

function TransactionPage(Props) {
  var wallet = Props.wallet;
  var match = React.useState(function () {
        return /* Init */0;
      });
  var setState = match[1];
  var state = match[0];
  React.useEffect((function () {
          Curry._1(setState, (function (param) {
                  return /* Loading */1;
                }));
          var onDone = function (data) {
            return Curry._1(setState, (function (param) {
                          return {
                                  TAG: /* Success */0,
                                  _0: data
                                };
                        }));
          };
          var onError = function (code) {
            return Curry._1(setState, (function (param) {
                          return {
                                  TAG: /* Failed */1,
                                  _0: "Error code:" + String(code)
                                };
                        }));
          };
          return TezStats.Transaction.queryByAddress(wallet.address, onDone, onError, undefined);
        }), [wallet.address]);
  var content;
  content = typeof state === "number" ? React.createElement("div", undefined, "...") : (
      state.TAG ? React.createElement("div", undefined) : React.createElement(TransactionPage$TransactionHistory, {
              address: wallet.address,
              transactions: state._0
            })
    );
  return React.createElement(MainLayout.make, {
              children: content
            });
}

var make = TransactionPage;

exports.TransactionIcon = TransactionIcon;
exports.intl = intl;
exports.styledVolume = styledVolume;
exports.TransactionHistory = TransactionHistory;
exports.make = make;
/* intl Not a pure module */
